// vite.config.js
import { defineConfig } from "file:///home/runner/SIMPLE-START-with-API/node_modules/vite/dist/node/index.js";

// api/server.js
import express from "file:///home/runner/SIMPLE-START-with-API/node_modules/express/index.js";
import bodyParser from "file:///home/runner/SIMPLE-START-with-API/node_modules/body-parser/index.js";
import puppeteer from "file:///home/runner/SIMPLE-START-with-API/node_modules/puppeteer/lib/esm/puppeteer/puppeteer.js";
var api = express();
api.use(bodyParser.json({ limit: "50mb" }));
api.use(bodyParser.urlencoded({ extended: false }));
api.use(bodyParser.json());
(async () => {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();
  await page.goto("https://emptycan.com");
  const title = await page.$eval("title", (el) => el.textContent);
  const firstParagraph = await page.$eval("p", (el) => el.textContent);
  console.log(title);
  console.log(firstParagraph);
  await browser.close();
})();
api.post("/suggestor", async (req, res, next) => {
  try {
  } catch (error) {
    console.log(error.config.data.error);
  }
});
var server_default = api;

// vite.config.js
var expressServerPlugin = (path, expressApp) => ({
  name: "configure-server",
  configureServer(server) {
    server.middlewares.use(path, expressApp);
  }
});
var vite_config_default = defineConfig({
  plugins: [
    expressServerPlugin("/api", server_default)
  ],
  server: {
    host: "0.0.0.0"
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcuanMiLCAiYXBpL3NlcnZlci5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL3J1bm5lci9TSU1QTEUtU1RBUlQtd2l0aC1BUElcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9ob21lL3J1bm5lci9TSU1QTEUtU1RBUlQtd2l0aC1BUEkvdml0ZS5jb25maWcuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvcnVubmVyL1NJTVBMRS1TVEFSVC13aXRoLUFQSS92aXRlLmNvbmZpZy5qc1wiO2ltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gJ3ZpdGUnO1xuaW1wb3J0IGFwaSBmcm9tICcuL2FwaS9zZXJ2ZXInXG5cbmNvbnN0IGV4cHJlc3NTZXJ2ZXJQbHVnaW4gPSAocGF0aCwgZXhwcmVzc0FwcCkgPT4gKHtcbiAgbmFtZTogJ2NvbmZpZ3VyZS1zZXJ2ZXInLFxuICBjb25maWd1cmVTZXJ2ZXIoc2VydmVyKSB7XG4gICAgc2VydmVyLm1pZGRsZXdhcmVzLnVzZShwYXRoLCBleHByZXNzQXBwKTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XG4gIHBsdWdpbnM6IFtcbiAgICBleHByZXNzU2VydmVyUGx1Z2luKCcvYXBpJywgYXBpKSxcbiAgXSxcbiAgc2VydmVyOiB7XG4gICAgaG9zdDogJzAuMC4wLjAnXG4gIH1cbn0pXG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9ob21lL3J1bm5lci9TSU1QTEUtU1RBUlQtd2l0aC1BUEkvYXBpXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvaG9tZS9ydW5uZXIvU0lNUExFLVNUQVJULXdpdGgtQVBJL2FwaS9zZXJ2ZXIuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL2hvbWUvcnVubmVyL1NJTVBMRS1TVEFSVC13aXRoLUFQSS9hcGkvc2VydmVyLmpzXCI7aW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgcHVwcGV0ZWVyIGZyb20gJ3B1cHBldGVlcic7XG5jb25zdCBhcGkgPSBleHByZXNzKCk7XG5hcGkudXNlKGJvZHlQYXJzZXIuanNvbih7bGltaXQ6ICc1MG1iJ30pKTtcbmFwaS51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwaS51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5cbihhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goKTtcbiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgYXdhaXQgcGFnZS5nb3RvKCdodHRwczovL2VtcHR5Y2FuLmNvbScpO1xuICAgIGNvbnN0IHRpdGxlID0gYXdhaXQgcGFnZS4kZXZhbCgndGl0bGUnLCBlbCA9PiBlbC50ZXh0Q29udGVudCk7XG4gICAgY29uc3QgZmlyc3RQYXJhZ3JhcGggPSBhd2FpdCBwYWdlLiRldmFsKCdwJywgZWwgPT4gZWwudGV4dENvbnRlbnQpO1xuICAgIGNvbnNvbGUubG9nKHRpdGxlKTtcbiAgICBjb25zb2xlLmxvZyhmaXJzdFBhcmFncmFwaCk7XG4gICAgYXdhaXQgYnJvd3Nlci5jbG9zZSgpO1xufSkoKTtcblxuYXBpLnBvc3QoJy9zdWdnZXN0b3InLCBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICB0cnkge1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yLmNvbmZpZy5kYXRhLmVycm9yKTtcbiAgICB9XG59KVxuXG5cbmV4cG9ydCBkZWZhdWx0IGFwaTsiXSwKICAibWFwcGluZ3MiOiAiO0FBQXdSLFNBQVMsb0JBQW9COzs7QUNBM0IsT0FBTyxhQUFhO0FBQzlTLE9BQU8sZ0JBQWdCO0FBQ3ZCLE9BQU8sZUFBZTtBQUN0QixJQUFNLE1BQU0sUUFBUTtBQUNwQixJQUFJLElBQUksV0FBVyxLQUFLLEVBQUMsT0FBTyxPQUFNLENBQUMsQ0FBQztBQUN4QyxJQUFJLElBQUksV0FBVyxXQUFXLEVBQUUsVUFBVSxNQUFNLENBQUMsQ0FBQztBQUNsRCxJQUFJLElBQUksV0FBVyxLQUFLLENBQUM7QUFBQSxDQUd4QixZQUFZO0FBQ1QsUUFBTSxVQUFVLE1BQU0sVUFBVSxPQUFPO0FBQ3ZDLFFBQU0sT0FBTyxNQUFNLFFBQVEsUUFBUTtBQUNuQyxRQUFNLEtBQUssS0FBSyxzQkFBc0I7QUFDdEMsUUFBTSxRQUFRLE1BQU0sS0FBSyxNQUFNLFNBQVMsUUFBTSxHQUFHLFdBQVc7QUFDNUQsUUFBTSxpQkFBaUIsTUFBTSxLQUFLLE1BQU0sS0FBSyxRQUFNLEdBQUcsV0FBVztBQUNqRSxVQUFRLElBQUksS0FBSztBQUNqQixVQUFRLElBQUksY0FBYztBQUMxQixRQUFNLFFBQVEsTUFBTTtBQUN4QixHQUFHO0FBRUgsSUFBSSxLQUFLLGNBQWMsT0FBTyxLQUFLLEtBQUssU0FBUztBQUM3QyxNQUFJO0FBQUEsRUFFSixTQUFTLE9BQU87QUFFWixZQUFRLElBQUksTUFBTSxPQUFPLEtBQUssS0FBSztBQUFBLEVBQ3ZDO0FBQ0osQ0FBQztBQUdELElBQU8saUJBQVE7OztBRDNCZixJQUFNLHNCQUFzQixDQUFDLE1BQU0sZ0JBQWdCO0FBQUEsRUFDakQsTUFBTTtBQUFBLEVBQ04sZ0JBQWdCLFFBQVE7QUFDdEIsV0FBTyxZQUFZLElBQUksTUFBTSxVQUFVO0FBQUEsRUFDekM7QUFDRjtBQUVBLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLFNBQVM7QUFBQSxJQUNQLG9CQUFvQixRQUFRLGNBQUc7QUFBQSxFQUNqQztBQUFBLEVBQ0EsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLEVBQ1I7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
